// Zed settings
//
// For information on how to configure Zed, see the Zed
// documentation: https://zed.dev/docs/configuring-zed
//
// To see all of Zed's default settings without changing your
// custom settings, run `zed: open default settings` from the
// command palette (cmd-shift-p / ctrl-shift-p)
{
  "show_edit_predictions": false,
  "agent": {
    "default_profile": "ask",
    "always_allow_tool_actions": true,
    "default_model": {
      "provider": "zed.dev",
      "model": "claude-3-7-sonnet-latest"
    },
    "version": "2"
  },
  "edit_predictions": {
    "enabled_in_text_threads": true
  },
  "vim_mode": true,
  "vim": {
    "cursor_shape": {
      "normal": "block",
      "insert": "bar",
      "replace": "block",
      "visual": "underline"
    }
  },
  "restore_on_startup": "last_workspace",
  "vertical_scroll_margin": 10,
  "horizontal_scroll_margin": 10,
  "ui_font_size": 18,
  "buffer_font_family": "PragmataPro Mono",
  "buffer_font_size": 18,
  "buffer_line_height": "standard",
  "theme": "Catppuccin Mocha (lavender)",
  "icon_theme": "Catppuccin Mocha",
  "ui_font_family": "IBM Plex Sans",
  "terminal": {
    "line_height": "standard",
    "font_family": "PragmataPro Mono"
  },
  "calls": {
    "mute_on_join": true,
    "share_on_join": false
  },
  "features": {
    "edit_prediction_provider": "zed"
  },
  "tab_bar": {
    "show": true,
    "show_nav_history_buttons": false,
    "show_tab_bar_buttons": true
  },
  "tabs": {
    "git_status": true,
    "file_icons": true,
    "show_diagnostics": "all",
    "show_close_button": "hover"
  },
  "preferred_line_length": 120,
  "project_panel": {
    "indent_guides": {
      "show": "never"
    },
    "default_width": 320
  },
  "lsp": {
    "gopls": {
      "initialization_options": {
        "hints": {
          "assignVariableTypes": true,
          "compositeLiteralFields": true,
          "compositeLiteralTypes": true,
          "constantValues": true,
          "functionTypeParameters": true,
          "parameterNames": true,
          "rangeVariableTypes": true
        }
      }
    },
    "typescript-language-server": {
      "initialization_options": {
        "preferences": {
          "includeInlayParameterNameHints": "all",
          "includeInlayParameterNameHintsWhenArgumentMatchesName": true,
          "includeInlayFunctionParameterTypeHints": true,
          "includeInlayVariableTypeHints": true,
          "includeInlayVariableTypeHintsWhenTypeMatchesName": true,
          "includeInlayPropertyDeclarationTypeHints": true,
          "includeInlayFunctionLikeReturnTypeHints": true,
          "includeInlayEnumMemberValueHints": true
        }
      }
    }
  }
}
